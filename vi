#!/bin/bash
# vim-switch - switch to existing vim instance in screen session
# (c) 2013-2015 Luc Deschenaux
# LICENSE: GPLv3 - http://www.gnu.org/licenses/gpl-3.0.txt

# TODO: switch between terminal windows / screen sessions
# TODO: use getopts in getfilename() and pass options to vim

VIM=$(which vim)
[ "$TERM" = "screen" ] || exec $VIM $@

# uncomment to kill the calling shell
KILL=-9

# detect whether this script is run from vim
if [ "$(ps -o cmd= $PPID | cut -f 1 -d ' ')" = "$VIM" ] ; then
    INVIM=true
fi

main() {

    MYSHELL_SCREEN=$(ps -o ppid= $PPID)
    WD=$PWD

    # no parameters, open vim instance selection dialog if any
    [ $# -eq 0 ] && selectExistingVimInstance

    # switch to existing vim instance if possible
    getfilename $@ && switchToExistingVimInstance $@
    [ -f "$TMPLIST" ] && rm $TMPLIST

    # exit if called from vim
    [ -n "$INVIM" ] && exit 0

    # else run vim normally, if not called from vim
    cd $WD
    exec $VIM $@
}


screenpid() {

  shopt -s nocasematch

  _PID=$1

  while ! [[ $(ps -o cmd= $_PID) =~ ^SCREEN ]] ; do
    _PID=$(ps -o ppid= $_PID) || return 1
  done

  echo $_PID

}

getVimInstances() {
    # get pid ppid pts and filename list for vim instances
    TMPLIST=$(mktemp -u)
    ps -Af |
    grep $VIM |
    awk '{printf("%s %s %s",$2,$3,$6);for(i=8;i<=NF;++i)printf(" %s",$i);printf("%c","\n")}' > $TMPLIST
}

getfilename() {
# strip options from arguments and return the real path in FILEPATH variable
# return an error when many filenames are specified or file does not exists

    while [ $# -gt 0 ] ; do
        if [ "${1:0:1}" != '-' ] ; then
            # error when many filenames are specified
            [ -n "$FILENAME" ] && return 1
            FILENAME="$1"
        fi
        shift
    done

    # run vim normally when file does not exists
    [ -f "$FILENAME" ] || return 1

    FILEPATH=$(realpath "$FILENAME")

}

switchToExistingVimInstance() {

    # get pid ppid pts and filename list for vim instances
    [ -f "$TMPLIST" ] || getVimInstances

    # search an existing vim instance for FILEPATH
    while read PID_PPID_PTS_RELPATH ; do
        [ -f "$TMPLIST" ] && rm $TMPLIST

        ARRAY=($PID_PPID_PTS_RELPATH)
        VIM_PID=${ARRAY[0]}
        VIM_PPID=${ARRAY[1]}
        VIM_PTS=${ARRAY[2]}
        VIM_RELPATH=${ARRAY[@]:4}

        [ -z "$VIM_RELPATH" ] && continue

        # skip when basename not in parameters
        echo "$@" | grep -q $(basename $VIM_RELPATH) || continue

        # skip when cannot change to vim directory
        cd /proc/$VIM_PID/cwd || continue

        # get real file path
        VIM_FILEPATH=$(realpath $VIM_RELPATH)

        [ "$VIM_FILEPATH" = "$FILEPATH" ] || continue

        # check whether the vim parent screen match this script parent screen
        VIM_SCREEN=$(screenpid $VIM_PPID) || continue
        if [ "$MYSHELL_SCREEN" = "$VIM_SCREEN" ] ; then

            # get the screen window number for vim parent shell
            _WINDOW=$(tr '\0' '\n' < /proc/$VIM_PPID/environ | grep ^WINDOW= | cut -f 2 -d '=')

            # switch to existing vim session window
echo select $KILL $PPID
            screen -X select $_WINDOW
echo KILL

            # optionally kill this script parent shell
            [ -n "$KILL" ] && kill $KILL $PPID
            exit

        fi

    done < $TMPLIST

    return 1
}

selectExistingVimInstance() {
    getVimInstances

    FILE_LIST=()
    # get vim instance list sharing this script PPID
    while read PID_PPID_PTS_RELPATH ; do
        ARRAY=($PID_PPID_PTS_RELPATH)
        VIM_PID=${ARRAY[0]}
        VIM_PPID=${ARRAY[1]}

        # check whether the vim parent screen match this script parent screen
        VIM_SCREEN=$(screenpid $VIM_PPID) &&
        [ "$VIM_SCREEN" = "$MYSHELL_SCREEN" ] &&
        # and whether we can change to vim directory
        [ -f /proc/$VIM_PID/cwd ] &&
        cd /proc/$VIM_PID/cwd &&
        VIM_RELPATH=${ARRAY[@]:4} &&
        FILE_LIST+=("$(realpath $VIM_RELPATH)")

    done < $TMPLIST

    # show dialog
    if [ ${#FILE_LIST[*]} -ne 0 ] ; then
      FILEPATH=$(zenity --list --width 640 --height 512 --column "File" ${FILE_LIST[*]} 2> /dev/null)
      if [ -n "$FILEPATH" ] ; then
          switchToExistingVimInstance "$FILEPATH"
      fi
    fi
}

main $@
