#!/bin/bash   
# vim-switch - switch to existing vim instance in screen session
# (c) 2013-2015 Luc Deschenaux
# LICENSE: GPLv3 - http://www.gnu.org/licenses/gpl-3.0.txt

# TODO: switch between terminal windows / screen sessions         
# TODO: use getopts in getfilename() and pass options to vim

VIM=$(which vim)  

getfilename() {   
# strip options from arguments and return the real path in FILEPATH variable
# return an error when many filenames are specified or file does not exists

    while [ $# -gt 0 ] ; do                
        if [ "${1:0:1}" != '-' ] ; then    
            # error when many filenames are specified             
            [ -n "$FILENAME" ] && return 1
            FILENAME="$1"
        fi    
        shift 
    done      

    # run vim normally when file does not exists
    [ -f "$FILENAME" ] || return 1

    FILEPATH=$(realpath "$FILENAME")

}             

getfilename $@ && {
 
    # get pid ppid pts and filename list for vim instances 
    TMPLIST=$(mktemp -u)
    ps -Af |      
    grep $VIM |
    awk '{printf("%s %s %s",$2,$3,$6);for(i=8;i<=NF;++i)printf(" %s",$i);printf("%c","\n")}' > $TMPLIST

    # search an existing vim instance for FILEPATH
    while read PID_PPID_PTS_RELPATH ; do
        [ -f "$TMPLIST" ] && rm $TMPLIST

        ARRAY=($PID_PPID_PTS_RELPATH)
        VIM_PID=${ARRAY[0]}
        VIM_PPID=${ARRAY[1]}
        VIM_PTS=${ARRAY[2]}
        VIM_RELPATH=${ARRAY[@]:4}

        # skip when basename not in parameters
        echo "$@" | grep -q $(basename $VIM_RELPATH) || continue
 
        # skip when cannot change to vim directory
        cd /proc/$VIM_PID/cwd || continue

        # get real file path
        VIM_FILEPATH=$(realpath $VIM_RELPATH)

        [ "$VIM_FILEPATH" = "$FILEPATH" ] || continue

        # get the screen window number for vim parent shell
        _WINDOW=$(tr '\0' '\n' < /proc/$VIM_PPID/environ | grep ^WINDOW= | cut -f 2 -d '=')

        # check whether the vim parent shell match this script parent shell
        VIMSHELL_PPID=$(ps -o ppid= $VIM_PPID)
        MYSHELL_PPID=$(ps -o ppid= $PPID)
        if [ "$MYSHELL_PPID" = "$VIMSHELL_PPID" ] ; then

            # switch to existing vim session window
            screen -X select $_WINDOW

            # optionally kill this script parent shell
            [ -n "$KILL" ] && kill $PPID
            exit  

        fi    

    done < $TMPLIST
 
}             
 
# else run vim normally
exec $VIM $@  
